// Упорядочить слова в соответствии с ростом их характеристик(длина содержащейся серии)
#define _CRT_SECURE_NO_WARNINGS
#include<iostream>	
#include<stdio.h>
using namespace std;

int SF(char* fname);
int strSeria(char* str);


int main()
{
	setlocale(LC_ALL, "ru");
	char str[20] = "1.txt";
	int cod = SF(str);
	if (cod == 1)
		printf("error\n");
}

int strSeria(char* str)
{
	int seriaCount, maxSeria = 1;
	for (int i = 0; i < strlen(str); i++) {
		seriaCount = 1;
		for (int j = i + 1; j < strlen(str); j++) {
			if (str[i] == str[j])
				seriaCount += 1;
			else
				break;
		}
		if(seriaCount > maxSeria)
			maxSeria = seriaCount;
	}
	printf("%d\n", maxSeria);
	return maxSeria;
}
int SF(char* fname)
{
	char str[80];
	FILE* f;
	if ((f = fopen(fname, "w")) == NULL)
		return 1;

	gets_s(str, 80);
	while (strcmp(str, "***") != 0)
	{
		strSeria(str);
		strcat(str, "\n");
		fputs(str, f);
		gets_s(str, 80);
	}

	fclose(f);
	return 0;
}
--------------------------------------------------------------------------------------------
// функции работы со строками
#include<iostream>
using namespace std;

 int strlen(char* str)
{
	int count = 0;
	while (*str) {
		count++;
		str++;
	}
	return count;
}
char* strcat(char* str1, char* str2)
{
	while (*str1) str1++;
	do
	{
		*str1 = *str2;
		str1++; str2++;
	} while (*str2);
	return str1;
}

char* strcpy(char* str1, char* str2)
{
	do
	{
		*str1 = *str2;
		str1++; str2++;
	} while ((*str1) || (*str2));
	return str1;
}

bool strstr(char* str1, char* str2)
{
	while (*str1 == *str2)
	{
		str1++; str2++;
		if (!(*str1))
			break;
	}
	if (!(*str1) && !(*str2))
		return 1;
	else
		return 0;
}

int strcmp(char* str1, char* str2)
{
	while (*str1 && *str2)
	{
		str1++; str2++;
	}
	return *str1 - *str2;
}

char* strchr(char* str, char ch)
{
	while (*str)
	{
		if (ch == *str)
			return str;
		str++;
	}
	return NULL;
}

int main()
{
	char str1[80] = "Hello";
	char str2[80] = "world";
	strcpy(str1, str2);
	printf("%s", str1);
}
------------------------------------------------------------------------------------------
// меню сортировок
#include<iostream>
#include<stdlib.h>
using namespace std;

const int N = 10;

void bubbleSort(int* a)
{

}

void insertionSort(int* a)
{

}

void selectionSort(int* a)
{

}

void quickSort(int* a)
{

}

void shellSort(int* a)
{

}

void standartSort(int* a)
{

}
int main()
{
	int a[N];
	for (int i = 0; i < N; i++) { printf("a[%d] = ", i); scanf_s("%d", &a[i]); }
	
	setlocale(LC_ALL, "ru");
	printf("Types of sorting:\n");
	printf("1. Bubble-sort(пузырьковая)\n2. Insertion-sort(вставками)\n3. Selection sort(выбором)\n"
		   "4. Quick-sort (быстрая)\n5. Shell sort(Шелла)\n6. Standart sort(стандартная).\n");
	printf("Choose one of them: ");
	int n;
	scanf_s("%d", &n);
	switch(n)
	{
		case 1:
			bubbleSort(a);
			break;
		case 2: 
			insertionSort(a);
			break;
		case 3:
			selectionSort(a);
			break;
		case 4:
			quickSort(a);
			break;
		case 5:
			shellSort(a);
			break;
		case 6:
			standartSort(a);
			break;
		default: 
			printf("There is no sort under the %d number", n);
	}
}
